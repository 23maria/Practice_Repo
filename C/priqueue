#include<stdio.h>
# define N 20		
int Q[N],P[N];
int r=-1,f=-1;
void enqueue(int data,int p)
{
	int i;
	if((f==0)&&(r==N-1))
		printf("queue is full\n");
	else
	{
		if(f==-1)
		{
			f=r=0;
			Q[r]=data;
			P[r]=p;
		}
		else if (r==N-1)
		{
			for(i=f;i<=r;i++)
			{
				Q[i-f]=Q[i];
				P[i-f]=p;
				r=r-f;
				f=0;
				for(i=r;i>f;i--)
				{
					if(p>P[i])
					{
						Q[i+1]=Q[i];
						P[i+1]=P[i];
					}
					else
						break;
					Q[i+1]-=data;
					P[i+1]=p;
					r++;
				}
			}
		}
		else
		{
			for(i=r;i>=f;i--)
			{
				if(p>P[i])
				{
					Q[i+1]=Q[i];
					P[i+1]=P[i];
				}
				else
					break;
			}
			Q[i+1]=data;
			P[i+1]=p;
			r++;
		}
	}
}
void print()
{
	int i;
	for(i=f;i<=r;i++)
		printf("priority %d \n elements %d",Q[i],P[i]);
}
void  dequeue()
{
	if(f==-1)
		printf("queue is empty");
	else
	{
		printf("deleted element %d \n it's priority %d\n",P[f],Q[f]);		
		if(f==r)
			f=r=-1;
		else
			f++;
	}
}
int main()
{
	int op,i,n,p,data;
	printf("enter your choice:\n");
	do{
		printf("1.insert data\n2.display data\n3.delete data\n4.exit\n");
		scanf("%d",&op);
		switch(op)
		{
			case 1: printf("\nenter no of data");
				scanf("%d",&n);
				printf("\nenter data and priority:");
				i=0;
				while(i<n)
				{
					scanf("%d %d",&data,&p);
					enqueue(p,data);
					i++;
				}
				break;
			case 2: print();
				break;
                       case 3: dequeue();			
                       	break;
                       default:printf("\nwrong choice:");
                }
          }while(op!=4);
        return 0;
}
